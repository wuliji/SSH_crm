<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
		
	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置核心事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 
			isolation:隔离级别
			propagation:传播行为
			read-only:只读
		 -->
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置将通知织入目标对象 -->
	<aop:config>
		<!-- 配置切点 -->
		<aop:pointcut expression="execution(* com.wuliji.service.impl.*ServiceImpl.*(..))" id="txPc"/>
		<!-- 配置切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
	</aop:config>
	
	<!-- 将SessionFactory配置到spring容器中 -->
	<!-- 加载配置方案1:仍然使用外部的hibernate.cfg.xml配置信息 -->
	<!-- <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean> -->
	<!-- 加载配置方案2:在spring配置中放置hibernate配置信息 -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 将连接池注入到sessionFactory,hibernate通过连接池获得连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 5个必选配置已经在c3p0中读取 -->
				<!-- <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.connection.url">jdbc:mysql:///wlj_hibernate</prop>
				<prop key="hibernate.connection.username">root</prop>
				<prop key="hibernate.connection.password">Wang961210</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 三个可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 引入orm元数据，指定orm元数据所在的包路径，spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:com/wuliji/domain"></property>
	</bean>
		
	<!-- action配置 -->
	<!-- 注意:Action对象作用范围一定是多例的，这样才符合struts2架构 -->
	<bean name="userAction" class="com.wuliji.web.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean name="customerAction" class="com.wuliji.web.action.CustomerAction" scope="prototype">
		<property name="cs" ref="customerService"></property>
	</bean>
	<bean name="baseDictAction" class="com.wuliji.web.action.BaseDictAction" scope="prototype">
		<property name="bds" ref="baseDictService"></property>
	</bean>
	<bean name="linkManAction" class="com.wuliji.web.action.LinkManAction" scope="prototype">
		<property name="ls" ref="linkManService"></property>
	</bean>
	
	<!-- service配置 -->
	<bean name="userService" class="com.wuliji.service.impl.UserServiceImpl">
		<property name="dao" ref="userDao"></property>
	</bean>
	<bean name="customerService" class="com.wuliji.service.impl.CustomerServiceImpl">
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="baseDictService" class="com.wuliji.service.impl.BaseDictServiceImpl">
		<property name="bdd" ref="baseDictDao"></property>
	</bean>
	<bean name="linkManService" class="com.wuliji.service.impl.LinkManServiceImpl">
		<property name="lmd" ref="linkManDao"></property>
	</bean>
	
	
	<!-- dao配置 -->
	<bean name="userDao" class="com.wuliji.dao.impl.UserDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="customerDao" class="com.wuliji.dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="baseDictDao" class="com.wuliji.dao.impl.BaseDictDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="linkManDao" class="com.wuliji.dao.impl.LinkManDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
</beans>